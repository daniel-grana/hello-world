---
name: test-json-matrix

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
        URL:
          description: 'URL'
          required: false

jobs:
  get-urls:
    name: Get Urls
    runs-on: "ubuntu-24.04"
    outputs:
        matrix: ${{ steps.urls-from-input.outputs.matrix }}
    steps:
      - name: 'Setup jq'
        uses: dcarbone/install-jq-action@v3
        with:
          version: '1.7'
          force: false

      - name: 'Check jq'
        # language=sh
        run: |
          which jq
          jq --version
          
      - name: Get urls from input
        id: urls-from-input
        run: |
          # Extract the domain from the input space URL and remove protocol prefix if present
          full_url="${{ github.event.inputs.URL }}"
          ## test1
          ####### aux=$(jq -nc '{urls: ($ARGS.positional[0] | split(" "))}' --args $full_url)
          ####### echo "urls=$aux" >> $GITHUB_OUTPUT
          ## test 2
          ####### json_array=()
          ####### json_array+=("\"$full_url\"")
          ####### json_elements=$(IFS=,; echo "${json_array[*]}")
          ####### json_output="{ \"urls\": [$json_elements] }"
          ####### echo "urls=$json_output" | tee -a "$GITHUB_OUTPUT"
          #echo "matrix={\"urls\":[{\"domain\":\"$full_url\"}]}" >> $GITHUB_OUTPUT
          echo "matrix={\"urls\":[\"$full_url\"]}" >> $GITHUB_OUTPUT

      #- name: Set job output
      #  id: urls
      #  run: |
      #    echo "matrix=${{ steps.urls-from-input.outputs.matrix }}"
      #    echo "matrix=${{ steps.urls-from-input.outputs.matrix }}" >> $GITHUB_OUTPUT

  synchronize:
    needs: get-urls
    name: "Running matrix"
    timeout-minutes: 20
    runs-on: "ubuntu-24.04"
    strategy:
      matrix: ${{ fromJSON(needs.get-urls.outputs.matrix) }}
    steps:
      
      - name: Log variables
        env:
          JSON_MATRIX: ${{ toJSON(matrix) }}
        run: |
          echo "JSON_MATRIX: $JSON_MATRIX"
