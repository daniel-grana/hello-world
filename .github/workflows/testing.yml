# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on pull request events but only for the master branch
  pull_request:
    types: [synchronize, labeled, closed]
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  job0:
    if: github.event_name == 'workflow_dispatch' && github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Run bash script
        id: step0
        run: |
          echo "branch name" ${{ github.ref }}
  
  job1:
    if: github.event_name != 'workflow_dispatch'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    outputs:
      my-var: ${{ steps.step1.outputs.var1 }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        id: step1
        run: |
          echo setting value to var1 of step1
          echo ::set-output name=var1::$('true')
  
  
  job2:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: job1
    
    env:
      allowed: ${{needs.job1.outputs.my-var}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo "allowed:" ${{env.allowed}}
          
      - name: Run if
        if: ${{env.allowed }} == 'true'
        run: |
          echo "allowed:" ${{env.allowed}}
          
          
          
          
          echo test, and deploy your project.
